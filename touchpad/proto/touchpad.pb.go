// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/touchpad.proto

package touchpad

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event_Gender int32

const (
	Event_MIXED  Event_Gender = 0
	Event_MALE   Event_Gender = 1
	Event_FEMALE Event_Gender = 2
)

// Enum value maps for Event_Gender.
var (
	Event_Gender_name = map[int32]string{
		0: "MIXED",
		1: "MALE",
		2: "FEMALE",
	}
	Event_Gender_value = map[string]int32{
		"MIXED":  0,
		"MALE":   1,
		"FEMALE": 2,
	}
)

func (x Event_Gender) Enum() *Event_Gender {
	p := new(Event_Gender)
	*p = x
	return p
}

func (x Event_Gender) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Gender) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_touchpad_proto_enumTypes[0].Descriptor()
}

func (Event_Gender) Type() protoreflect.EnumType {
	return &file_proto_touchpad_proto_enumTypes[0]
}

func (x Event_Gender) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Gender.Descriptor instead.
func (Event_Gender) EnumDescriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{2, 0}
}

type Event_Status int32

const (
	Event_UPCOMING    Event_Status = 0
	Event_SEEDED      Event_Status = 1
	Event_IN_PROGRESS Event_Status = 2
	Event_COMPLETED   Event_Status = 3
)

// Enum value maps for Event_Status.
var (
	Event_Status_name = map[int32]string{
		0: "UPCOMING",
		1: "SEEDED",
		2: "IN_PROGRESS",
		3: "COMPLETED",
	}
	Event_Status_value = map[string]int32{
		"UPCOMING":    0,
		"SEEDED":      1,
		"IN_PROGRESS": 2,
		"COMPLETED":   3,
	}
)

func (x Event_Status) Enum() *Event_Status {
	p := new(Event_Status)
	*p = x
	return p
}

func (x Event_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_touchpad_proto_enumTypes[1].Descriptor()
}

func (Event_Status) Type() protoreflect.EnumType {
	return &file_proto_touchpad_proto_enumTypes[1]
}

func (x Event_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Status.Descriptor instead.
func (Event_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{2, 1}
}

type Event_Stroke int32

const (
	Event_FREE   Event_Stroke = 0
	Event_BREAST Event_Stroke = 1
	Event_BACK   Event_Stroke = 2
	Event_FLY    Event_Stroke = 3
	Event_MEDLEY Event_Stroke = 4
)

// Enum value maps for Event_Stroke.
var (
	Event_Stroke_name = map[int32]string{
		0: "FREE",
		1: "BREAST",
		2: "BACK",
		3: "FLY",
		4: "MEDLEY",
	}
	Event_Stroke_value = map[string]int32{
		"FREE":   0,
		"BREAST": 1,
		"BACK":   2,
		"FLY":    3,
		"MEDLEY": 4,
	}
)

func (x Event_Stroke) Enum() *Event_Stroke {
	p := new(Event_Stroke)
	*p = x
	return p
}

func (x Event_Stroke) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_Stroke) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_touchpad_proto_enumTypes[2].Descriptor()
}

func (Event_Stroke) Type() protoreflect.EnumType {
	return &file_proto_touchpad_proto_enumTypes[2]
}

func (x Event_Stroke) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_Stroke.Descriptor instead.
func (Event_Stroke) EnumDescriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{2, 2}
}

type GetMeetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetID int32 `protobuf:"varint,1,opt,name=meetID,proto3" json:"meetID,omitempty"`
}

func (x *GetMeetInfoRequest) Reset() {
	*x = GetMeetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetInfoRequest) ProtoMessage() {}

func (x *GetMeetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMeetInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{0}
}

func (x *GetMeetInfoRequest) GetMeetID() int32 {
	if x != nil {
		return x.MeetID
	}
	return 0
}

type GetMeetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CourseName   string                 `protobuf:"bytes,2,opt,name=courseName,proto3" json:"courseName,omitempty"`
	CourseOrder  string                 `protobuf:"bytes,3,opt,name=courseOrder,proto3" json:"courseOrder,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Events       int32                  `protobuf:"varint,6,opt,name=events,proto3" json:"events,omitempty"`
	Females      int32                  `protobuf:"varint,7,opt,name=females,proto3" json:"females,omitempty"`
	Males        int32                  `protobuf:"varint,8,opt,name=males,proto3" json:"males,omitempty"`
	HostTeamName string                 `protobuf:"bytes,9,opt,name=hostTeamName,proto3" json:"hostTeamName,omitempty"`
	IsEnded      bool                   `protobuf:"varint,10,opt,name=isEnded,proto3" json:"isEnded,omitempty"`
	IsEnded24Hrs bool                   `protobuf:"varint,11,opt,name=isEnded24Hrs,proto3" json:"isEnded24Hrs,omitempty"`
	IsFinalsMeet bool                   `protobuf:"varint,12,opt,name=isFinalsMeet,proto3" json:"isFinalsMeet,omitempty"`
	IsPrelimMeet bool                   `protobuf:"varint,13,opt,name=isPrelimMeet,proto3" json:"isPrelimMeet,omitempty"`
	IsStarted    bool                   `protobuf:"varint,14,opt,name=isStarted,proto3" json:"isStarted,omitempty"`
	MeetName     string                 `protobuf:"bytes,15,opt,name=meetName,proto3" json:"meetName,omitempty"`
	TeamCount    int32                  `protobuf:"varint,16,opt,name=teamCount,proto3" json:"teamCount,omitempty"`
}

func (x *GetMeetInfoResponse) Reset() {
	*x = GetMeetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetInfoResponse) ProtoMessage() {}

func (x *GetMeetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMeetInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{1}
}

func (x *GetMeetInfoResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetMeetInfoResponse) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *GetMeetInfoResponse) GetCourseOrder() string {
	if x != nil {
		return x.CourseOrder
	}
	return ""
}

func (x *GetMeetInfoResponse) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetMeetInfoResponse) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetMeetInfoResponse) GetEvents() int32 {
	if x != nil {
		return x.Events
	}
	return 0
}

func (x *GetMeetInfoResponse) GetFemales() int32 {
	if x != nil {
		return x.Females
	}
	return 0
}

func (x *GetMeetInfoResponse) GetMales() int32 {
	if x != nil {
		return x.Males
	}
	return 0
}

func (x *GetMeetInfoResponse) GetHostTeamName() string {
	if x != nil {
		return x.HostTeamName
	}
	return ""
}

func (x *GetMeetInfoResponse) GetIsEnded() bool {
	if x != nil {
		return x.IsEnded
	}
	return false
}

func (x *GetMeetInfoResponse) GetIsEnded24Hrs() bool {
	if x != nil {
		return x.IsEnded24Hrs
	}
	return false
}

func (x *GetMeetInfoResponse) GetIsFinalsMeet() bool {
	if x != nil {
		return x.IsFinalsMeet
	}
	return false
}

func (x *GetMeetInfoResponse) GetIsPrelimMeet() bool {
	if x != nil {
		return x.IsPrelimMeet
	}
	return false
}

func (x *GetMeetInfoResponse) GetIsStarted() bool {
	if x != nil {
		return x.IsStarted
	}
	return false
}

func (x *GetMeetInfoResponse) GetMeetName() string {
	if x != nil {
		return x.MeetName
	}
	return ""
}

func (x *GetMeetInfoResponse) GetTeamCount() int32 {
	if x != nil {
		return x.TeamCount
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AgeHi       int32        `protobuf:"varint,2,opt,name=ageHi,proto3" json:"ageHi,omitempty"`
	AgeLow      int32        `protobuf:"varint,3,opt,name=ageLow,proto3" json:"ageLow,omitempty"`
	AgeGroup    string       `protobuf:"bytes,4,opt,name=ageGroup,proto3" json:"ageGroup,omitempty"`
	Day         string       `protobuf:"bytes,5,opt,name=day,proto3" json:"day,omitempty"`
	Distance    int32        `protobuf:"varint,6,opt,name=distance,proto3" json:"distance,omitempty"`
	EventNumber int32        `protobuf:"varint,7,opt,name=eventNumber,proto3" json:"eventNumber,omitempty"`
	Gender      Event_Gender `protobuf:"varint,8,opt,name=gender,proto3,enum=touchpad.Event_Gender" json:"gender,omitempty"`
	Relay       bool         `protobuf:"varint,9,opt,name=relay,proto3" json:"relay,omitempty"`
	Rounds      int32        `protobuf:"varint,10,opt,name=rounds,proto3" json:"rounds,omitempty"`
	Session     int32        `protobuf:"varint,11,opt,name=session,proto3" json:"session,omitempty"`
	Status      Event_Status `protobuf:"varint,12,opt,name=status,proto3,enum=touchpad.Event_Status" json:"status,omitempty"`
	Stroke      Event_Stroke `protobuf:"varint,13,opt,name=stroke,proto3,enum=touchpad.Event_Stroke" json:"stroke,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Event) GetAgeHi() int32 {
	if x != nil {
		return x.AgeHi
	}
	return 0
}

func (x *Event) GetAgeLow() int32 {
	if x != nil {
		return x.AgeLow
	}
	return 0
}

func (x *Event) GetAgeGroup() string {
	if x != nil {
		return x.AgeGroup
	}
	return ""
}

func (x *Event) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *Event) GetDistance() int32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *Event) GetEventNumber() int32 {
	if x != nil {
		return x.EventNumber
	}
	return 0
}

func (x *Event) GetGender() Event_Gender {
	if x != nil {
		return x.Gender
	}
	return Event_MIXED
}

func (x *Event) GetRelay() bool {
	if x != nil {
		return x.Relay
	}
	return false
}

func (x *Event) GetRounds() int32 {
	if x != nil {
		return x.Rounds
	}
	return 0
}

func (x *Event) GetSession() int32 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *Event) GetStatus() Event_Status {
	if x != nil {
		return x.Status
	}
	return Event_UPCOMING
}

func (x *Event) GetStroke() Event_Stroke {
	if x != nil {
		return x.Stroke
	}
	return Event_FREE
}

type GetMeetEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetID int32 `protobuf:"varint,1,opt,name=meetID,proto3" json:"meetID,omitempty"`
}

func (x *GetMeetEventsRequest) Reset() {
	*x = GetMeetEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetEventsRequest) ProtoMessage() {}

func (x *GetMeetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetMeetEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{3}
}

func (x *GetMeetEventsRequest) GetMeetID() int32 {
	if x != nil {
		return x.MeetID
	}
	return 0
}

type GetMeetEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetMeetEventsResponse) Reset() {
	*x = GetMeetEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMeetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetEventsResponse) ProtoMessage() {}

func (x *GetMeetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetMeetEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{4}
}

func (x *GetMeetEventsResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type ITiming struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventID           int32   `protobuf:"varint,1,opt,name=eventID,proto3" json:"eventID,omitempty"`
	SwimmerID         int32   `protobuf:"varint,2,opt,name=swimmerID,proto3" json:"swimmerID,omitempty"`
	TeamID            int32   `protobuf:"varint,3,opt,name=teamID,proto3" json:"teamID,omitempty"`
	FirstName         string  `protobuf:"bytes,4,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName          string  `protobuf:"bytes,5,opt,name=lastName,proto3" json:"lastName,omitempty"`
	TeamName          string  `protobuf:"bytes,6,opt,name=teamName,proto3" json:"teamName,omitempty"`
	Heat              int32   `protobuf:"varint,7,opt,name=heat,proto3" json:"heat,omitempty"`
	Lane              int32   `protobuf:"varint,8,opt,name=lane,proto3" json:"lane,omitempty"`
	SeedTime          int32   `protobuf:"zigzag32,9,opt,name=seedTime,proto3" json:"seedTime,omitempty"`
	FormattedSeedTime string  `protobuf:"bytes,10,opt,name=formattedSeedTime,proto3" json:"formattedSeedTime,omitempty"`
	Points            float32 `protobuf:"fixed32,11,opt,name=points,proto3" json:"points,omitempty"`
	Rank              int32   `protobuf:"varint,12,opt,name=rank,proto3" json:"rank,omitempty"`
	Time              int32   `protobuf:"varint,13,opt,name=time,proto3" json:"time,omitempty"`
	FormattedTime     string  `protobuf:"bytes,14,opt,name=formattedTime,proto3" json:"formattedTime,omitempty"`
}

func (x *ITiming) Reset() {
	*x = ITiming{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ITiming) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ITiming) ProtoMessage() {}

func (x *ITiming) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ITiming.ProtoReflect.Descriptor instead.
func (*ITiming) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{5}
}

func (x *ITiming) GetEventID() int32 {
	if x != nil {
		return x.EventID
	}
	return 0
}

func (x *ITiming) GetSwimmerID() int32 {
	if x != nil {
		return x.SwimmerID
	}
	return 0
}

func (x *ITiming) GetTeamID() int32 {
	if x != nil {
		return x.TeamID
	}
	return 0
}

func (x *ITiming) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ITiming) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ITiming) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *ITiming) GetHeat() int32 {
	if x != nil {
		return x.Heat
	}
	return 0
}

func (x *ITiming) GetLane() int32 {
	if x != nil {
		return x.Lane
	}
	return 0
}

func (x *ITiming) GetSeedTime() int32 {
	if x != nil {
		return x.SeedTime
	}
	return 0
}

func (x *ITiming) GetFormattedSeedTime() string {
	if x != nil {
		return x.FormattedSeedTime
	}
	return ""
}

func (x *ITiming) GetPoints() float32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *ITiming) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ITiming) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ITiming) GetFormattedTime() string {
	if x != nil {
		return x.FormattedTime
	}
	return ""
}

type GetIEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetID  int32 `protobuf:"varint,1,opt,name=meetID,proto3" json:"meetID,omitempty"`
	EventID int32 `protobuf:"varint,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
}

func (x *GetIEventRequest) Reset() {
	*x = GetIEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIEventRequest) ProtoMessage() {}

func (x *GetIEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIEventRequest.ProtoReflect.Descriptor instead.
func (*GetIEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{6}
}

func (x *GetIEventRequest) GetMeetID() int32 {
	if x != nil {
		return x.MeetID
	}
	return 0
}

func (x *GetIEventRequest) GetEventID() int32 {
	if x != nil {
		return x.EventID
	}
	return 0
}

type GetIEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timings []*ITiming `protobuf:"bytes,1,rep,name=timings,proto3" json:"timings,omitempty"`
}

func (x *GetIEventResponse) Reset() {
	*x = GetIEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIEventResponse) ProtoMessage() {}

func (x *GetIEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIEventResponse.ProtoReflect.Descriptor instead.
func (*GetIEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{7}
}

func (x *GetIEventResponse) GetTimings() []*ITiming {
	if x != nil {
		return x.Timings
	}
	return nil
}

type CheckMeetDiffRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MeetID int32 `protobuf:"varint,1,opt,name=meetID,proto3" json:"meetID,omitempty"`
}

func (x *CheckMeetDiffRequest) Reset() {
	*x = CheckMeetDiffRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMeetDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMeetDiffRequest) ProtoMessage() {}

func (x *CheckMeetDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMeetDiffRequest.ProtoReflect.Descriptor instead.
func (*CheckMeetDiffRequest) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{8}
}

func (x *CheckMeetDiffRequest) GetMeetID() int32 {
	if x != nil {
		return x.MeetID
	}
	return 0
}

type CheckMeetDiffResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Initial    bool                          `protobuf:"varint,1,opt,name=initial,proto3" json:"initial,omitempty"`
	DiffExists bool                          `protobuf:"varint,2,opt,name=diffExists,proto3" json:"diffExists,omitempty"`
	Diffs      []*CheckMeetDiffResponse_Diff `protobuf:"bytes,3,rep,name=diffs,proto3" json:"diffs,omitempty"`
}

func (x *CheckMeetDiffResponse) Reset() {
	*x = CheckMeetDiffResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMeetDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMeetDiffResponse) ProtoMessage() {}

func (x *CheckMeetDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMeetDiffResponse.ProtoReflect.Descriptor instead.
func (*CheckMeetDiffResponse) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{9}
}

func (x *CheckMeetDiffResponse) GetInitial() bool {
	if x != nil {
		return x.Initial
	}
	return false
}

func (x *CheckMeetDiffResponse) GetDiffExists() bool {
	if x != nil {
		return x.DiffExists
	}
	return false
}

func (x *CheckMeetDiffResponse) GetDiffs() []*CheckMeetDiffResponse_Diff {
	if x != nil {
		return x.Diffs
	}
	return nil
}

type CheckMeetDiffResponse_Diff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old *Event `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New *Event `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *CheckMeetDiffResponse_Diff) Reset() {
	*x = CheckMeetDiffResponse_Diff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_touchpad_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMeetDiffResponse_Diff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMeetDiffResponse_Diff) ProtoMessage() {}

func (x *CheckMeetDiffResponse_Diff) ProtoReflect() protoreflect.Message {
	mi := &file_proto_touchpad_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMeetDiffResponse_Diff.ProtoReflect.Descriptor instead.
func (*CheckMeetDiffResponse_Diff) Descriptor() ([]byte, []int) {
	return file_proto_touchpad_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CheckMeetDiffResponse_Diff) GetOld() *Event {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *CheckMeetDiffResponse_Diff) GetNew() *Event {
	if x != nil {
		return x.New
	}
	return nil
}

var File_proto_touchpad_proto protoreflect.FileDescriptor

var file_proto_touchpad_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x44, 0x22,
	0xa1, 0x04, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x66, 0x65, 0x6d, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x61, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x6c, 0x65,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x54, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x32, 0x34, 0x48, 0x72, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x65, 0x64, 0x32, 0x34,
	0x48, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x4d,
	0x65, 0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x73, 0x4d, 0x65, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x50, 0x72, 0x65,
	0x6c, 0x69, 0x6d, 0x4d, 0x65, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x50, 0x72, 0x65, 0x6c, 0x69, 0x6d, 0x4d, 0x65, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xb7, 0x04, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x67, 0x65, 0x48, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x67,
	0x65, 0x48, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x67, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70,
	0x61, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2e, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x52, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x22,
	0x29, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x58,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x42, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12,
	0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x22, 0x3d,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x52, 0x45, 0x45,
	0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x52, 0x45, 0x41, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x4c, 0x59, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x4c, 0x45, 0x59, 0x10, 0x04, 0x22, 0x2e, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x44, 0x22, 0x40, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61,
	0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x87, 0x03, 0x0a, 0x07, 0x49, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x77, 0x69, 0x6d, 0x6d, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x77, 0x69, 0x6d, 0x6d, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x68, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x73, 0x65, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x53, 0x65, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x53, 0x65, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x6e, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x65, 0x65, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0x40, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64,
	0x2e, 0x49, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x2e, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x65, 0x74, 0x44, 0x69,
	0x66, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x65, 0x74, 0x49,
	0x44, 0x22, 0xdb, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x65, 0x74, 0x44,
	0x69, 0x66, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x64, 0x69, 0x66, 0x66, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x52, 0x05, 0x64, 0x69, 0x66, 0x66,
	0x73, 0x1a, 0x4c, 0x0a, 0x04, 0x44, 0x69, 0x66, 0x66, 0x12, 0x21, 0x0a, 0x03, 0x6f, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61,
	0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x03,
	0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x75, 0x63,
	0x68, 0x70, 0x61, 0x64, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x32,
	0xc8, 0x02, 0x0a, 0x08, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x12, 0x4c, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x74, 0x6f,
	0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74, 0x6f, 0x75, 0x63,
	0x68, 0x70, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x74, 0x6f,
	0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x6f,
	0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x65, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x74, 0x6f,
	0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70,
	0x61, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d,
	0x65, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66, 0x12, 0x1e, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70,
	0x61, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70,
	0x61, 0x64, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x65, 0x74, 0x44, 0x69, 0x66, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x70, 0x61, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_touchpad_proto_rawDescOnce sync.Once
	file_proto_touchpad_proto_rawDescData = file_proto_touchpad_proto_rawDesc
)

func file_proto_touchpad_proto_rawDescGZIP() []byte {
	file_proto_touchpad_proto_rawDescOnce.Do(func() {
		file_proto_touchpad_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_touchpad_proto_rawDescData)
	})
	return file_proto_touchpad_proto_rawDescData
}

var file_proto_touchpad_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_touchpad_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_touchpad_proto_goTypes = []interface{}{
	(Event_Gender)(0),                  // 0: touchpad.Event.Gender
	(Event_Status)(0),                  // 1: touchpad.Event.Status
	(Event_Stroke)(0),                  // 2: touchpad.Event.Stroke
	(*GetMeetInfoRequest)(nil),         // 3: touchpad.GetMeetInfoRequest
	(*GetMeetInfoResponse)(nil),        // 4: touchpad.GetMeetInfoResponse
	(*Event)(nil),                      // 5: touchpad.Event
	(*GetMeetEventsRequest)(nil),       // 6: touchpad.GetMeetEventsRequest
	(*GetMeetEventsResponse)(nil),      // 7: touchpad.GetMeetEventsResponse
	(*ITiming)(nil),                    // 8: touchpad.ITiming
	(*GetIEventRequest)(nil),           // 9: touchpad.GetIEventRequest
	(*GetIEventResponse)(nil),          // 10: touchpad.GetIEventResponse
	(*CheckMeetDiffRequest)(nil),       // 11: touchpad.CheckMeetDiffRequest
	(*CheckMeetDiffResponse)(nil),      // 12: touchpad.CheckMeetDiffResponse
	(*CheckMeetDiffResponse_Diff)(nil), // 13: touchpad.CheckMeetDiffResponse.Diff
	(*timestamppb.Timestamp)(nil),      // 14: google.protobuf.Timestamp
}
var file_proto_touchpad_proto_depIdxs = []int32{
	14, // 0: touchpad.GetMeetInfoResponse.startDate:type_name -> google.protobuf.Timestamp
	14, // 1: touchpad.GetMeetInfoResponse.endDate:type_name -> google.protobuf.Timestamp
	0,  // 2: touchpad.Event.gender:type_name -> touchpad.Event.Gender
	1,  // 3: touchpad.Event.status:type_name -> touchpad.Event.Status
	2,  // 4: touchpad.Event.stroke:type_name -> touchpad.Event.Stroke
	5,  // 5: touchpad.GetMeetEventsResponse.events:type_name -> touchpad.Event
	8,  // 6: touchpad.GetIEventResponse.timings:type_name -> touchpad.ITiming
	13, // 7: touchpad.CheckMeetDiffResponse.diffs:type_name -> touchpad.CheckMeetDiffResponse.Diff
	5,  // 8: touchpad.CheckMeetDiffResponse.Diff.old:type_name -> touchpad.Event
	5,  // 9: touchpad.CheckMeetDiffResponse.Diff.new:type_name -> touchpad.Event
	3,  // 10: touchpad.Touchpad.GetMeetInfo:input_type -> touchpad.GetMeetInfoRequest
	6,  // 11: touchpad.Touchpad.GetMeetEvents:input_type -> touchpad.GetMeetEventsRequest
	9,  // 12: touchpad.Touchpad.GetIEvent:input_type -> touchpad.GetIEventRequest
	11, // 13: touchpad.Touchpad.CheckMeetDiff:input_type -> touchpad.CheckMeetDiffRequest
	4,  // 14: touchpad.Touchpad.GetMeetInfo:output_type -> touchpad.GetMeetInfoResponse
	7,  // 15: touchpad.Touchpad.GetMeetEvents:output_type -> touchpad.GetMeetEventsResponse
	10, // 16: touchpad.Touchpad.GetIEvent:output_type -> touchpad.GetIEventResponse
	12, // 17: touchpad.Touchpad.CheckMeetDiff:output_type -> touchpad.CheckMeetDiffResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_touchpad_proto_init() }
func file_proto_touchpad_proto_init() {
	if File_proto_touchpad_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_touchpad_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMeetEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ITiming); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMeetDiffRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMeetDiffResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_touchpad_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMeetDiffResponse_Diff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_touchpad_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_touchpad_proto_goTypes,
		DependencyIndexes: file_proto_touchpad_proto_depIdxs,
		EnumInfos:         file_proto_touchpad_proto_enumTypes,
		MessageInfos:      file_proto_touchpad_proto_msgTypes,
	}.Build()
	File_proto_touchpad_proto = out.File
	file_proto_touchpad_proto_rawDesc = nil
	file_proto_touchpad_proto_goTypes = nil
	file_proto_touchpad_proto_depIdxs = nil
}
